#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <30 31>;
        };

        spotlight {
            bindings = <&kp LC(SPACE)>;
            key-positions = <32 33>;
        };
    };

    behaviors {
        hm: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
        hs: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <185>;
            quick-tap-ms = <0>;
            flavor = "balanced";
        };
        esc: esc {
            compatible = "zmk,behavior-tap-dance";
            label = "ESC";
            #binding-cells = <0>;
            bindings =
                <&kp Q>,
                <&kp ESC>;

            tapping-term-ms = <200>;
        };
        tab: tab {
            compatible = "zmk,behavior-tap-dance";
            label = "TAB";
            #binding-cells = <0>;
            bindings =
                <&mt LCTRL ENTER>,
                <&kp TAB>;

            tapping-term-ms = <250>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
       &esc       &kp W         &kp E       &kp R  &kp T          &kp Y  &kp U      &kp I    &kp O           &kp P
    &lt 2 A       &kp S         &kp D     &lt 3 F  &kp G          &kp H  &kp J      &kp K    &kp L        &kp SEMI
&hs LSHFT Z  &hm LALT X         &kp C       &kp V  &kp B          &kp N  &kp M  &kp COMMA  &kp DOT  &hs RSHFT FSLH
                         &mt LGUI DEL  &lt 1 BSPC           &lt 4 SPACE              &tab
            >;
        };

        NAV {
            bindings = <
&kp LC(C)  &kp LG(LBKT)         &kp UP   &kp LG(RBKT)      &kp LC(G)    &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9   &kp KP_PLUS
&kp LS(A)      &kp LEFT       &kp DOWN      &kp RIGHT  &kp LA(LG(G))      &kp KP_DIVIDE  &kp N4  &kp N5  &kp N6  &kp KP_MINUS
&kp LSHFT         &none  &kp LA(LG(C))  &kp LA(LG(V))   &kp LG(BSPC)         &kp KP_DOT  &kp N1  &kp N2  &kp N3    &kp KP_DOT
                                &trans         &trans                         &kp ENTER          &kp N0
            >;
        };

        NUM {
            bindings = <
&kp KP_MULTIPLY  &kp N7  &kp N8     &kp N9   &kp KP_PLUS    &kp KP_MULTIPLY  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9   &kp KP_PLUS
         &trans  &kp N4  &kp N5     &kp N6  &kp KP_MINUS      &kp KP_DIVIDE  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_MINUS
  &kp KP_DIVIDE  &kp N1  &kp N2     &kp N3    &kp KP_DOT         &kp KP_DOT  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3    &kp KP_DOT
                         &kp N0  &kp ENTER                    &kp BACKSPACE                   &kp KP_NUMBER_0
            >;
        };

        ADJ {
            bindings = <
 &kp BSLH    &trans  &trans  &trans  &kp PERCENT      &trans     &trans           &kp STAR      &kp MINUS  &kp LBKT
   &trans    &trans  &trans  &trans       &trans    &kp EXCL  &kp CARET           &kp AMPS      &kp QMARK   &kp SQT
&kp LSHFT  &kp LALT  &trans  &trans       &trans      &trans     &trans  &kp LA(LS(EQUAL))  &kp LA(EQUAL)  &kp RBKT
                     &trans  &trans                   &trans                        &trans
            >;
        };

        FUN {
            bindings = <
 &kp EXCL    &kp AT  &kp HASH    &kp DLLR  &kp PRCNT      &kp CARET   &kp AMPS   &kp STAR  &kp LPAR   &kp RPAR
   &kp F1    &kp F2    &kp F3      &kp F4     &kp F5         &kp F6     &kp F7     &kp F8    &kp F9    &kp F10
&kp LSHFT  &kp LALT    &trans  &bt BT_CLR     &reset    &bootloader  &kp EQUAL  &kp CARET  &kp AMPS  &kp QMARK
                       &trans      &trans                    &trans                &trans
            >;
        };
    };
};
