#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        lang {
            bindings = <&kp LG(SPACE)>;
            key-positions = <30 31>;
        };
    };

    behaviors {
        HOMEROW_MODS: HOMEROW_MODS {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <13 10>;
        };
        HOMEROW_SHIFT: HOMEROW_SHIFT {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_SHIFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <175>;
            quick-tap-ms = <0>;
            flavor = "balanced";
            hold-trigger-key-positions = <20 29>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
       &kp Q       &kp W         &kp E       &kp R  &kp T          &kp Y  &kp U      &kp I    &kp O           &kp P
     &lt 4 A       &kp S         &kp D     &lt 3 F  &kp G          &kp H  &kp J      &kp K    &kp L        &kp SEMI
&mt LSHIFT Z  &mt LALT X         &kp C       &kp V  &kp B          &kp N  &kp M  &kp COMMA  &kp DOT  &mt RSHFT FSLH
                          &mt LGUI DEL  &lt 1 BSPC           &lt 2 SPACE         &kp ENTER
            >;
        };

        NAV {
            bindings = <
&kp LC(C)  &kp LG(LBKT)         &kp UP   &kp LG(RBKT)      &kp LC(G)    &kp KP_MULTIPLY  &kp N7  &kp N8  &kp N9   &kp KP_PLUS
&kp LS(A)      &kp LEFT       &kp DOWN      &kp RIGHT  &kp LA(LG(G))      &kp KP_DIVIDE  &kp N4  &kp N5  &kp N6  &kp KP_MINUS
&kp LSHFT         &none  &kp LA(LG(C))  &kp LA(LG(V))   &kp LG(BSPC)         &kp KP_DOT  &kp N1  &kp N2  &kp N3    &kp KP_DOT
                                &trans         &trans                         &kp ENTER          &kp N0
            >;
        };

        NUM {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans            &trans          &trans
            >;
        };

        ADJ {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                &trans  &trans            &trans          &trans
            >;
        };
    };
};
